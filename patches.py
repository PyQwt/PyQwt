patches = {'.debug': '--- qwt-sources/include/qwt_text.h.debug\t2004-11-21 11:09:25.826373536 +0100\n+++ qwt-sources/include/qwt_text.h\t2004-11-21 11:09:25.985342797 +0100\n@@ -37,6 +37,7 @@\n public:\n     virtual ~QwtText();\n \n+#ifndef PYQWT_DEBUG\n     static QwtText *makeText(const QString &, Qt::TextFormat,\n         int align, const QFont &, const QColor &color = QColor(),\n         const QPen &pen = QPen(Qt::NoPen),\n@@ -46,6 +47,17 @@\n         int align, const QFont &, const QColor &color = QColor(),\n         const QPen &pen = QPen(Qt::NoPen),\n         const QBrush &brush = QBrush(Qt::NoBrush));\n+#else\n+    static QwtText *makeText(const QString &, Qt::TextFormat,\n+        int align, const QFont &, const QColor &color = QColor(),\n+        const QPen &pen = QPen(Qt::red, 2),\n+        const QBrush &brush = QBrush(Qt::yellow));\n+\n+    static QwtText *makeText(const QString &, \n+        int align, const QFont &, const QColor &color = QColor(),\n+        const QPen &pen = QPen(Qt::red, 2),\n+        const QBrush &brush = QBrush(Qt::yellow));\n+#endif\n \n     static void setDefaultFormat(Qt::TextFormat);\n     static Qt::TextFormat defaultFormat();\n', '.autoscale': '--- qwt-sources/src/qwt_plot.cpp.autoscale\t2004-11-21 11:09:25.693399248 +0100\n+++ qwt-sources/src/qwt_plot.cpp\t2004-11-21 11:09:26.029334290 +0100\n@@ -9,6 +9,7 @@\n \n // vim: expandtab\n \n+#include <float.h>\n #include <qlabel.h>\n #include <qpainter.h>\n #include <qfocusdata.h>\n@@ -480,6 +481,47 @@\n         }\n     }\n \n+    // PyQwt adjust the autoscalers also for the markers\n+\n+    double min[axisCnt];\n+    double max[axisCnt];\n+    for (i = 0; i < axisCnt; i++)\n+    {\n+        min[i] = DBL_MAX;\n+        max[i] = DBL_MIN;\n+    }\n+    \n+    QwtPlotMarkerIterator itm = markerIterator();\n+    for (const QwtPlotMarker *m = itm.toFirst(); m != 0; m = ++itm)\n+    {\n+        const int xAxis = m->xAxis();\n+        const int yAxis = m->yAxis();\n+        const double x = m->xValue();\n+        const double y = m->yValue();\n+\n+        if (x<min[xAxis])\n+            min[xAxis] = x;\n+        if (x>max[xAxis])\n+            max[xAxis] = x;\n+        if (y<min[yAxis])\n+            min[yAxis] = y;\n+        if (x>max[yAxis])\n+            max[yAxis] = y;\n+    }\n+\n+    for (i = 0; i < axisCnt; i++)\n+    {\n+        if ( (min[i] != DBL_MAX) && (max[i] != DBL_MIN) )\n+        {\n+            if ( !resetDone[i] && (min[i] != max[i]) )\n+            {\n+                d_as[i].reset();\n+                resetDone[i] = TRUE;\n+            }\n+            d_as[i].adjust(min[i], max[i]);\n+        }\n+    }\n+    \n     //\n     // Adjust scales\n     //\n@@ -598,7 +640,7 @@\n     }\n \n     //\n-    //  draw curves\n+    // draw curves\n     //\n     QwtPlotCurveIterator itc = curveIterator();\n     for (QwtPlotCurve *curve = itc.toFirst(); curve != 0; curve = ++itc )\n'}
