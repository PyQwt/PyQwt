patches = {'.font': '--- qwt-sources/include/qwt_layout_metrics.h.font\tSun Aug 24 17:31:34 2003\n+++ qwt-sources/include/qwt_layout_metrics.h\tSun Aug 24 18:38:33 2003\n@@ -10,6 +10,7 @@\n #ifndef QWT_LAYOUT_METRICS_H\n #define QWT_LAYOUT_METRICS_H\n \n+#include <qfont.h>\n #include <qsize.h>\n #include "qwt_global.h"\n \n@@ -58,6 +59,10 @@\n     QPointArray deviceToLayout(const QPointArray &, \n         const QPainter * = NULL) const;\n \n+#if QT_VERSION >= 0x030100\n+    QFont scaleFontToWorld(const QFont &font) const;\n+#endif\n+\n     static QRect translate(const QWMatrix &, const QRect &);\n     static QPointArray translate(const QWMatrix &, const QPointArray &);\n \n@@ -67,6 +72,10 @@\n \n     double d_deviceToLayoutX;\n     double d_deviceToLayoutY;\n+\n+#if QT_VERSION >= 0x030100\n+    float d_scaleFontToWorld;\n+#endif\n };\n \n \n@@ -158,5 +167,15 @@\n     return QSize(screenToLayoutX(size.width()), \n         screenToLayoutY(size.height()));\n }\n+\n+#if QT_VERSION >= 0x030100\n+inline QFont QwtMetricsMap::scaleFontToWorld(const QFont &font) const\n+{\n+    QFont result = QFont(font);\n+    result.setPointSizeFloat(d_scaleFontToWorld*font.pointSizeFloat());\n+    return result;\n+}\n+#endif\n+\n \n #endif\n--- qwt-sources/src/qwt_layout_metrics.cpp.font\tSun Aug 24 17:42:50 2003\n+++ qwt-sources/src/qwt_layout_metrics.cpp\tSun Aug 24 17:46:12 2003\n@@ -17,6 +17,10 @@\n {\n     d_screenToLayoutX = d_screenToLayoutY = \n         d_deviceToLayoutX = d_deviceToLayoutY = 1.0;\n+\n+#if QT_VERSION >= 0x030100\n+    d_scaleFontToWorld = 1.0;\n+#endif\n }\n \n void QwtMetricsMap::setMetrics(const QPaintDeviceMetrics &layoutMetrics, \n@@ -33,6 +37,11 @@\n         double(deviceMetrics.logicalDpiX());\n     d_deviceToLayoutY = double(layoutMetrics.logicalDpiY()) / \n         double(deviceMetrics.logicalDpiY());\n+\n+#if QT_VERSION >= 0x030100\n+    d_scaleFontToWorld = float(deviceMetrics.logicalDpiY()) /\n+        float(screenMetrics.logicalDpiY());\n+#endif\n }\n \n QPoint QwtMetricsMap::layoutToDevice(const QPoint &point, \n--- qwt-sources/src/qwt_text.cpp.font\tSun Aug 24 17:54:11 2003\n+++ qwt-sources/src/qwt_text.cpp\tSun Aug 24 18:48:47 2003\n@@ -252,7 +252,11 @@\n     painter->restore();\n \n     painter->save();\n+#if QT_VERSION >= 0x030100\n+    painter->setFont(QwtPainter::metricsMap().scaleFontToWorld(font()));\n+#else\n     painter->setFont(font());\n+#endif\n     painter->setPen(color());\n     QwtPainter::drawText(painter, rect, alignment(), text());\n     painter->restore();\n@@ -265,14 +269,23 @@\n     if (painter)\n     {\n         painter->save();\n+#if QT_VERSION >= 0x030100\n+        painter->setFont(QwtPainter::metricsMap().scaleFontToWorld(font()));\n+#else\n         painter->setFont(font());\n+#endif\n         const QRect rect = metrics.boundingRect(text(), \n             alignment(), painter);\n         painter->restore();\n         return rect;\n     }\n \n-    return metrics.boundingRect(text(), alignment(), fontMetrics());\n+#if QT_VERSION >= 0x030100\n+    return metrics.boundingRect(text(), alignment(),\n+        QFontMetrics(QwtPainter::metricsMap().scaleFontToWorld(font())));\n+#else\n+    return metrics.boundingRect(text(), alignment(), QFontMetrics((font())));\n+#endif\n }\n \n #ifndef QT_NO_RICHTEXT\n', '.readonly': '--- qwt-sources/src/qwt_legend.cpp.readonly\tSun Aug 24 17:28:01 2003\n+++ qwt-sources/src/qwt_legend.cpp\tSun Aug 24 17:28:01 2003\n@@ -340,7 +340,7 @@\n */\n QwtLegend::QwtLegend(QWidget *parent, const char *name): \n     QScrollView(parent, name),\n-    d_readOnly(TRUE),\n+    d_readOnly(FALSE),\n     d_displayPolicy(QwtLegend::Auto),\n     d_identifierMode(QwtLegendButton::ShowLine\n              | QwtLegendButton::ShowSymbol\n'}
